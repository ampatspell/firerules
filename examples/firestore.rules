rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    match /things/{id} {
      allow read: if true;
      allow create: if request.resource.data.keys().toSet().hasOnly([ "_token", "type", "book", "bookmark", "fallback" ]) && (!("_token" in request.resource.data.keys()) || request.resource.data._token is string) && request.resource.data.type in [ "book", "bookmark" ].toSet() && ((request.resource.data.type == "book" && !request.resource.data.keys().toSet().hasAny([ "bookmark", "fallback" ]) && ((!("book" in request.resource.data.keys()) || (request.resource.data.book == null || request.resource.data.book is string)))) || (request.resource.data.type == "bookmark" && !request.resource.data.keys().toSet().hasAny([ "book", "fallback" ]) && (request.resource.data.bookmark is string)) || (!request.resource.data.keys().toSet().hasAny([ "book", "bookmark" ]) && (request.resource.data.fallback is string)));
      allow update: if request.resource.data.diff(resource.data).affectedKeys().hasOnly([ "_token", "book", "size", "bookmark", "fallback" ]) && (!("_token" in request.resource.data.keys()) || request.resource.data._token is string) && ((request.resource.data.type == "book" && !request.resource.data.diff(resource.data).affectedKeys().hasAny([ "bookmark", "fallback" ]) && (request.resource.data.book is string && ((resource.data.size is map && request.resource.data.size.diff(resource.data.size).affectedKeys().hasOnly([ "width", "height" ])) || request.resource.data.size.keys().toSet().hasOnly([ "width", "height" ])) && request.resource.data.size.width is int && request.resource.data.size.height is int)) || (request.resource.data.type == "bookmark" && !request.resource.data.diff(resource.data).affectedKeys().hasAny([ "book", "size", "fallback" ]) && (request.resource.data.bookmark is string)) || (!request.resource.data.diff(resource.data).affectedKeys().hasAny([ "book", "size", "bookmark" ]) && (request.resource.data.fallback is string)));
    }

  }
}
